{"version":3,"file":"main.js","sources":["../../src/js/main.js"],"sourcesContent":["const counters = document.querySelectorAll('.js-animate-number');\nlet hasRun = false;\n\nconst animateCount = (el, target) => {\n    let start = 0;\n    const duration = 1000; // in ms\n    const startTime = performance.now();\n    const digits = target.toString().length;\n\n    const update = (currentTime) => {\n        const elapsed = currentTime - startTime;\n        const progress = Math.min(elapsed / duration, 1);\n        const current = Math.floor(progress * target);\n        el.textContent = String(current).padStart(digits, '0');\n        if (progress < 1) {\n            requestAnimationFrame(update);\n        } else {\n            el.textContent = String(target).padStart(digits, '0'); // Ensure exact final value\n        }\n    };\n\n    requestAnimationFrame(update);\n};\n\nconst observer = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n        if (entry.isIntersecting && !hasRun) {\n            counters.forEach(counter => {\n                const target = parseInt(counter.getAttribute('data-target'), 10);\n                animateCount(counter, target);\n            });\n            hasRun = true;\n            observer.disconnect(); // Remove if you want it to animate again on scroll\n        }\n    });\n}, {\n    threshold: 0.5\n});\n\ncounters.forEach(counter => observer.observe(counter));"],"names":["counters","document","querySelectorAll","hasRun","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","counter","el","target","startTime","performance","now","digits","toString","length","update","currentTime","elapsed","progress","Math","min","current","floor","textContent","String","padStart","parseInt","getAttribute","disconnect","observe"],"mappings":"yBAAA,MAAMA,EAAWC,SAASC,iBAAiB,sBAC3C,IAAIC,GAAS,EAEb,MAqBMC,EAAW,IAAIC,qBAAqB,CAACC,EAASF,OACxCG,QAAQC,IACRA,EAAMC,iBAAmBN,MAChBI,QAAQG,IAxBR,EAACC,EAAIC,WAGhBC,EAAYC,YAAYC,MACxBC,EAASJ,EAAOK,WAAWC,OAE3BC,EAAUC,UACNC,EAAUD,EAAcP,EACxBS,EAAWC,KAAKC,IAAIH,EANb,IAMiC,GACxCI,EAAUF,KAAKG,MAAMJ,EAAWV,KACnCe,YAAcC,OAAOH,GAASI,SAASb,EAAQ,KAC9CM,EAAW,wBACWH,KAEnBQ,YAAcC,OAAOhB,GAAQiB,SAASb,EAAQ,4BAInCG,KAQGT,EADEoB,SAASpB,EAAQqB,aAAa,eAAgB,UAGxD,IACAC,4BAIN,KAGfhC,EAASO,QAAQG,GAAWN,EAAS6B,QAAQvB"}